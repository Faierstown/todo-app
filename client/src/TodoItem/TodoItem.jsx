import React from "react";
import styles from "./TodoItem.module.css"; // –ø–æ–¥–∫–ª—é—á–∞–µ–º –∫–∞–∫ –æ–±—ä–µ–∫—Ç
import { Link } from "react-router-dom";
const statusLabels = [
  "–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è",
  "–í—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–∞—è",
  "–û–±—ã—á–Ω–∞—è",
  "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è",
  "–°—Ä–æ—á–Ω–∞—è",
  "–ú–∞–∫—Å. –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç",
];
const statusIcons = ["üìç", "üß©", "üíº", "üî•", "üèÜ", "üíé"];
export default function TodoItem({ todo, deleteTodo, toggleTodo }) {
  const statusClass = styles[`status${todo.status}`];

  const className = `${styles.todo} ${statusClass}`;

  const isBanned = () => {
    if (!todo?.due_date) return false;
    return new Date() > new Date(todo.due_date);
  };

  const timeRemaining = () => {
    if (!todo?.due_date) return "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ";
    const timeDifference = new Date(todo.due_date) - new Date();
    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));
    const hours = Math.floor(
      (timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
    );
    const minutes = Math.floor(
      (timeDifference % (1000 * 60 * 60)) / (1000 * 60)
    );
    const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);
    const timeString = `${days}–¥–Ω : ${hours
      .toString()
      .padStart(2, "0")}—á : ${minutes.toString().padStart(2, "0")}–º`;
    return timeString;
  };

  return (
    <div className={className}>
      <Link to={`/todo/${todo.id}`} className={styles.title}>
        {todo.text}
      </Link>

      <div className={styles.meta}>
        <small>
          {statusIcons[todo.status]} –°—Ç–∞—Ç—É—Å: {statusLabels[todo.status]}
        </small>
        <br />‚è∞{" "}
        {todo.due_date
          ? new Date(todo.due_date).toLocaleString("ru-RU")
          : "–ë–µ–∑ —Å—Ä–æ–∫–∞"}
        <br />
        üïì –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:{" "}
        {todo.created_at
          ? new Date(todo.created_at).toLocaleString("ru-RU")
          : "‚Äî"}
        {isBanned() ? (
          <p className={styles.banned}>–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–∞</p>
        ) : (
          <p>–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: {timeRemaining()} </p>
        )}
      </div>

      <div className={styles.actions}>
        <button className={styles.Cancel} onClick={() => deleteTodo(todo.id)}>
          ‚ùå
        </button>
        <button className={styles.Agree} onClick={() => toggleTodo(todo)}>
          ‚úÖ
        </button>
      </div>
    </div>
  );
}
