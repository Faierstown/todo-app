import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";

export default function TodoDetails() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [todo, setTodo] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const statusLabels = [
    "–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è",
    "–í—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–∞—è",
    "–û–±—ã—á–Ω–∞—è",
    "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è",
    "–°—Ä–æ—á–Ω–∞—è",
    "–ú–∞–∫—Å. –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç",
  ];

  useEffect(() => {
    fetch(`http://localhost:5000/todos/${id}`)
      .then((res) => {
        if (!res.ok) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–¥–∞—á—É");
        return res.json();
      })
      .then((data) => {
        console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data);
        setTodo(data);
        setLoading(false);
      })
      .catch((err) => {
        setError(err.message);
        setLoading(false);
      });
  }, [id]);

  const handleSave = () => {
    fetch(`http://localhost:5000/todos/${id}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        text: todo.text,
        description: todo.description,
        completed: todo.completed,
        due_date: todo.due_date,
        status: todo.status,
      }),
    })
      .then((res) => {
        if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏");
        return res.json();
      })
      .then(() => {
        alert("–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!");
        navigate("/");
      })
      .catch((err) => alert(err.message));
  };

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  if (error) return <p style={{ color: "red" }}>{error}</p>;
  if (!todo) return <p>–ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>;

  return (
    <div style={{ maxWidth: "600px", margin: "auto", padding: "20px" }}>
      <h2>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ #{id}</h2>
      <label>–ù–∞–∑–≤–∞–Ω–∏–µ:</label>
      <input
        type="text"
        value={todo.text}
        onChange={(e) => setTodo({ ...todo, text: e.target.value })}
        style={{ width: "100%", marginBottom: "10px" }}
      />

      <label>–û–ø–∏—Å–∞–Ω–∏–µ:</label>
      <textarea
        value={todo.description || ""}
        onChange={(e) => setTodo({ ...todo, description: e.target.value })}
        style={{ width: "100%", height: "100px", marginBottom: "10px" }}
      />

      <label>
        <input
          type="checkbox"
          checked={!!todo.completed}
          onChange={(e) => setTodo({ ...todo, completed: e.target.checked })}
        />
        –í—ã–ø–æ–ª–Ω–µ–Ω–æ
      </label>

      <label>
        <input
          type="datetime-local"
          value={todo.due_date}
          onChange={(e) => setTodo({ ...todo, due_date: e.target.value })}
        />{" "}
        –î–µ–¥–ª–∞–π–Ω
      </label>

      <select
        value={todo.status}
        onChange={(e) => setTodo({ ...todo, status: e.target.value })}
      >
        <option value={0}>–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è</option>
        <option value={1}>–í—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–∞—è</option>
        <option value={2}>–û–±—ã—á–Ω–∞—è</option>
        <option value={3}>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è</option>
        <option value={4}>–°—Ä–æ—á–Ω–∞—è</option>
        <option value={5}>–ú–∞–∫—Å. –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç</option>
      </select>
      <p>üî• –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {statusLabels[todo.status] ?? "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}</p>

      <div style={{ marginTop: "20px" }}>
        <button onClick={handleSave} style={{ marginRight: "10px" }}>
          üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </button>
        <button onClick={() => navigate("/")}>‚¨Ö –ù–∞–∑–∞–¥</button>
      </div>
    </div>
  );
}
